<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--使用外部配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--自动扫描指定包及其子包下的所有Bean类-->
    <context:component-scan base-package="ncu.graduate"/>

    <!--设置数据源连接信息-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          p:driverClass="${driverClassName}"
          p:jdbcUrl="${url}"
          p:user="${username}"
          p:password="${password}"
          p:maxPoolSize="40"
          p:minPoolSize="2"
          p:initialPoolSize="2"
          p:maxIdleTime="30"/>

    <!--定义Hibernate的SessionFactory，SessionFactory需要依赖数据源，注入dataSource-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">

        <property name="packagesToScan">
            <list>
                <value>ncu.graduate.model</value>
            </list>
        </property>

        <property name="hibernateProperties">
            <props>
                <!--指定hibernate的连接方言-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--是否根据hibernate映射创建数据表-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
            </props>
        </property>
    </bean>

    <!-- 配置声明式事务管理，采用基于注解的方式 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory">
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>